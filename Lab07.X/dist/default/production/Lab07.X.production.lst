

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Apr 10 12:49:33 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  001E                     _ADRESH	set	30
   208  001F                     _ADCON0bits	set	31
   209  0012                     _T2CONbits	set	18
   210  0017                     _CCP1CONbits	set	23
   211  0015                     _CCPR1L	set	21
   212  009E                     _ADRESL	set	158
   213  0085                     _TRISA	set	133
   214  009F                     _ADCON1bits	set	159
   215  0092                     _PR2	set	146
   216  0087                     _TRISCbits	set	135
   217                           
   218                           	psect	cinit
   219  07F8                     start_initialization:	
   220                           ; #config settings
   221                           
   222  07F8                     __initialization:
   223                           
   224                           ; Clear objects allocated to BANK0
   225  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   226  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   227  07FA  01A5               	clrf	__pbssBANK0& (0+127)
   228  07FB  01A6               	clrf	(__pbssBANK0+1)& (0+127)
   229  07FC                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232  07FC                     __end_of__initialization:
   233  07FC  0183               	clrf	3
   234  07FD  120A  118A  2FAA   	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssBANK0
   237  0025                     __pbssBANK0:
   238  0025                     _duty_cycle:
   239  0025                     	ds	1
   240  0026                     _adc_value:
   241  0026                     	ds	1
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:
   245  0070                     ?_initPWM:
   246  0070                     ??_initPWM:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?___wmul:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ___wmul@multiplier:	
   256                           ; 2 bytes @ 0x0
   257                           
   258                           
   259                           ; 2 bytes @ 0x0
   260  0070                     	ds	2
   261  0072                     ___wmul@multiplicand:
   262                           
   263                           ; 2 bytes @ 0x2
   264  0072                     	ds	2
   265  0074                     ??___wmul:
   266  0074                     ___wmul@product:	
   267                           ; 1 bytes @ 0x4
   268                           
   269                           
   270                           ; 2 bytes @ 0x4
   271  0074                     	ds	2
   272  0076                     ?___lwdiv:
   273  0076                     ___lwdiv@divisor:	
   274                           ; 2 bytes @ 0x6
   275                           
   276                           
   277                           ; 2 bytes @ 0x6
   278  0076                     	ds	2
   279  0078                     ___lwdiv@dividend:
   280                           
   281                           ; 2 bytes @ 0x8
   282  0078                     	ds	2
   283  007A                     ??___lwdiv:
   284                           
   285                           ; 1 bytes @ 0xA
   286  007A                     	ds	1
   287  007B                     ___lwdiv@quotient:
   288                           
   289                           ; 2 bytes @ 0xB
   290  007B                     	ds	2
   291  007D                     ___lwdiv@counter:
   292                           
   293                           ; 1 bytes @ 0xD
   294  007D                     	ds	1
   295                           
   296                           	psect	cstackBANK0
   297  0020                     __pcstackBANK0:
   298  0020                     ??_main:
   299                           
   300                           ; 1 bytes @ 0x0
   301  0020                     	ds	2
   302  0022                     main@adc_value:
   303                           
   304                           ; 2 bytes @ 0x2
   305  0022                     	ds	2
   306  0024                     main@duty_cycle:
   307                           
   308                           ; 1 bytes @ 0x4
   309  0024                     	ds	1
   310                           
   311                           	psect	maintext
   312  07AA                     __pmaintext:	
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 53 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;  adc_value       2    2[BANK0 ] unsigned int 
   323 ;;  duty_cycle      1    4[BANK0 ] unsigned char 
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, pclath, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : B00/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       0       0       0       0
   334 ;;      Locals:         0       3       0       0       0
   335 ;;      Temps:          0       2       0       0       0
   336 ;;      Totals:         0       5       0       0       0
   337 ;;Total ram usage:        5 bytes
   338 ;; Hardware stack levels required when called: 1
   339 ;; This function calls:
   340 ;;		___lwdiv
   341 ;;		___wmul
   342 ;;		_initPWM
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348  07AA                     _main:	
   349                           ;psect for function _main
   350                           
   351  07AA                     l756:	
   352                           ;incstack = 0
   353                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   354                           
   355  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   356  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   357  07AC  139F               	bcf	31,7	;volatile
   358  07AD  129F               	bcf	31,5	;volatile
   359  07AE  121F               	bcf	31,4	;volatile
   360  07AF                     l758:
   361  07AF  30FF               	movlw	255
   362  07B0  0085               	movwf	5	;volatile
   363  07B1                     l760:
   364  07B1  120A  118A  272E  120A  118A  	fcall	_initPWM
   365  07B6                     l762:
   366  07B6  30C3               	movlw	-61
   367  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   368  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   369  07B9  059F               	andwf	31,f	;volatile
   370  07BA                     l764:
   371  07BA  141F               	bsf	31,0	;volatile
   372  07BB                     l766:
   373  07BB  149F               	bsf	31,1	;volatile
   374  07BC                     l35:
   375  07BC  189F               	btfsc	31,1	;volatile
   376  07BD  2FBF               	goto	u241
   377  07BE  2FC0               	goto	u240
   378  07BF                     u241:
   379  07BF  2FBC               	goto	l35
   380  07C0                     u240:
   381  07C0                     l768:
   382  07C0  081E               	movf	30,w	;volatile
   383  07C1  00A3               	movwf	main@adc_value+1
   384  07C2  1683               	bsf	3,5	;RP0=1, select bank1
   385  07C3  1303               	bcf	3,6	;RP1=0, select bank1
   386  07C4  081E               	movf	30,w	;volatile
   387  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   388  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   389  07C7  00A2               	movwf	main@adc_value
   390  07C8                     l770:
   391  07C8  30FF               	movlw	255
   392  07C9  00F6               	movwf	___lwdiv@divisor
   393  07CA  3003               	movlw	3
   394  07CB  00F7               	movwf	___lwdiv@divisor+1
   395  07CC  0823               	movf	main@adc_value+1,w
   396  07CD  00F1               	movwf	___wmul@multiplier+1
   397  07CE  0822               	movf	main@adc_value,w
   398  07CF  00F0               	movwf	___wmul@multiplier
   399  07D0  30FF               	movlw	255
   400  07D1  00F2               	movwf	___wmul@multiplicand
   401  07D2  3000               	movlw	0
   402  07D3  00F3               	movwf	___wmul@multiplicand+1
   403  07D4  120A  118A  2741  120A  118A  	fcall	___wmul
   404  07D9  0871               	movf	?___wmul+1,w
   405  07DA  00F9               	movwf	___lwdiv@dividend+1
   406  07DB  0870               	movf	?___wmul,w
   407  07DC  00F8               	movwf	___lwdiv@dividend
   408  07DD  120A  118A  2766  120A  118A  	fcall	___lwdiv
   409  07E2  0876               	movf	?___lwdiv,w
   410  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   411  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   412  07E5  00A0               	movwf	??_main
   413  07E6  0820               	movf	??_main,w
   414  07E7  00A4               	movwf	main@duty_cycle
   415  07E8                     l772:
   416  07E8  0824               	movf	main@duty_cycle,w
   417  07E9  0095               	movwf	21	;volatile
   418  07EA                     l774:
   419  07EA  3034               	movlw	52
   420  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   421  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   422  07ED  00A1               	movwf	??_main+1
   423  07EE  30F1               	movlw	241
   424  07EF  00A0               	movwf	??_main
   425  07F0                     u257:
   426  07F0  0BA0               	decfsz	??_main,f
   427  07F1  2FF0               	goto	u257
   428  07F2  0BA1               	decfsz	??_main+1,f
   429  07F3  2FF0               	goto	u257
   430  07F4  2FB6               	goto	l762
   431  07F5  120A  118A  2800   	ljmp	start
   432  07F8                     __end_of_main:
   433                           
   434                           	psect	text1
   435  072E                     __ptext1:	
   436 ;; *************** function _initPWM *****************
   437 ;; Defined at:
   438 ;;		line 42 in file "main.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465  072E                     _initPWM:	
   466                           ;psect for function _initPWM
   467                           
   468  072E                     l704:	
   469                           ;incstack = 0
   470                           ; Regs used in _initPWM: [wreg+status,2+status,0]
   471                           
   472                           
   473                           ;main.c: 43:     unsigned char duty_cycle = (unsigned char)((adc_value * 255) / 1023);
   474  072E  1683               	bsf	3,5	;RP0=1, select bank1
   475  072F  1303               	bcf	3,6	;RP1=0, select bank1
   476  0730  1107               	bcf	7,2	;volatile
   477  0731                     l706:
   478                           
   479                           ;main.c: 44: 
   480  0731  30F9               	movlw	249
   481  0732  0092               	movwf	18	;volatile
   482                           
   483                           ;main.c: 45:     CCPR1L = duty_cycle;
   484  0733  300F               	movlw	15
   485  0734  1283               	bcf	3,5	;RP0=0, select bank0
   486  0735  1303               	bcf	3,6	;RP1=0, select bank0
   487  0736  0095               	movwf	21	;volatile
   488  0737                     l708:
   489                           
   490                           ;main.c: 46: 
   491  0737  303F               	movlw	-193
   492  0738  0597               	andwf	23,f	;volatile
   493  0739                     l710:
   494                           
   495                           ;main.c: 47:     _delay((unsigned long)((20)*(8000000/4000.0)));
   496  0739  0817               	movf	23,w	;volatile
   497  073A  39F0               	andlw	-16
   498  073B  380C               	iorlw	12
   499  073C  0097               	movwf	23	;volatile
   500  073D                     l712:
   501                           
   502                           ;main.c: 49:     }
   503  073D  3003               	movlw	3
   504  073E  0492               	iorwf	18,f	;volatile
   505  073F                     l714:
   506  073F  1512               	bsf	18,2	;volatile
   507  0740                     l29:
   508  0740  0008               	return
   509  0741                     __end_of_initPWM:
   510                           
   511                           	psect	text2
   512  0741                     __ptext2:	
   513 ;; *************** function ___wmul *****************
   514 ;; Defined at:
   515 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  multiplier      2    0[COMMON] unsigned int 
   518 ;;  multiplicand    2    2[COMMON] unsigned int 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  product         2    4[COMMON] unsigned int 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  2    0[COMMON] unsigned int 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         4       0       0       0       0
   531 ;;      Locals:         2       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         6       0       0       0       0
   534 ;;Total ram usage:        6 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543  0741                     ___wmul:	
   544                           ;psect for function ___wmul
   545                           
   546  0741                     l716:	
   547                           ;incstack = 0
   548                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   549                           
   550  0741  01F4               	clrf	___wmul@product
   551  0742  01F5               	clrf	___wmul@product+1
   552  0743                     l718:
   553  0743  1C70               	btfss	___wmul@multiplier,0
   554  0744  2F46               	goto	u131
   555  0745  2F47               	goto	u130
   556  0746                     u131:
   557  0746  2F4D               	goto	l126
   558  0747                     u130:
   559  0747                     l720:
   560  0747  0872               	movf	___wmul@multiplicand,w
   561  0748  07F4               	addwf	___wmul@product,f
   562  0749  1803               	skipnc
   563  074A  0AF5               	incf	___wmul@product+1,f
   564  074B  0873               	movf	___wmul@multiplicand+1,w
   565  074C  07F5               	addwf	___wmul@product+1,f
   566  074D                     l126:
   567  074D  3001               	movlw	1
   568  074E                     u145:
   569  074E  1003               	clrc
   570  074F  0DF2               	rlf	___wmul@multiplicand,f
   571  0750  0DF3               	rlf	___wmul@multiplicand+1,f
   572  0751  3EFF               	addlw	-1
   573  0752  1D03               	skipz
   574  0753  2F4E               	goto	u145
   575  0754                     l722:
   576  0754  3001               	movlw	1
   577  0755                     u155:
   578  0755  1003               	clrc
   579  0756  0CF1               	rrf	___wmul@multiplier+1,f
   580  0757  0CF0               	rrf	___wmul@multiplier,f
   581  0758  3EFF               	addlw	-1
   582  0759  1D03               	skipz
   583  075A  2F55               	goto	u155
   584  075B                     l724:
   585  075B  0870               	movf	___wmul@multiplier,w
   586  075C  0471               	iorwf	___wmul@multiplier+1,w
   587  075D  1D03               	btfss	3,2
   588  075E  2F60               	goto	u161
   589  075F  2F61               	goto	u160
   590  0760                     u161:
   591  0760  2F43               	goto	l718
   592  0761                     u160:
   593  0761                     l726:
   594  0761  0875               	movf	___wmul@product+1,w
   595  0762  00F1               	movwf	?___wmul+1
   596  0763  0874               	movf	___wmul@product,w
   597  0764  00F0               	movwf	?___wmul
   598  0765                     l128:
   599  0765  0008               	return
   600  0766                     __end_of___wmul:
   601                           
   602                           	psect	text3
   603  0766                     __ptext3:	
   604 ;; *************** function ___lwdiv *****************
   605 ;; Defined at:
   606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;  divisor         2    6[COMMON] unsigned int 
   609 ;;  dividend        2    8[COMMON] unsigned int 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  quotient        2   11[COMMON] unsigned int 
   612 ;;  counter         1   13[COMMON] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  2    6[COMMON] unsigned int 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         4       0       0       0       0
   623 ;;      Locals:         3       0       0       0       0
   624 ;;      Temps:          1       0       0       0       0
   625 ;;      Totals:         8       0       0       0       0
   626 ;;Total ram usage:        8 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635  0766                     ___lwdiv:	
   636                           ;psect for function ___lwdiv
   637                           
   638  0766                     l730:	
   639                           ;incstack = 0
   640                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   641                           
   642  0766  01FB               	clrf	___lwdiv@quotient
   643  0767  01FC               	clrf	___lwdiv@quotient+1
   644  0768                     l732:
   645  0768  0876               	movf	___lwdiv@divisor,w
   646  0769  0477               	iorwf	___lwdiv@divisor+1,w
   647  076A  1903               	btfsc	3,2
   648  076B  2F6D               	goto	u171
   649  076C  2F6E               	goto	u170
   650  076D                     u171:
   651  076D  2FA5               	goto	l752
   652  076E                     u170:
   653  076E                     l734:
   654  076E  01FD               	clrf	___lwdiv@counter
   655  076F  0AFD               	incf	___lwdiv@counter,f
   656  0770  2F7C               	goto	l740
   657  0771                     l736:
   658  0771  3001               	movlw	1
   659  0772                     u185:
   660  0772  1003               	clrc
   661  0773  0DF6               	rlf	___lwdiv@divisor,f
   662  0774  0DF7               	rlf	___lwdiv@divisor+1,f
   663  0775  3EFF               	addlw	-1
   664  0776  1D03               	skipz
   665  0777  2F72               	goto	u185
   666  0778                     l738:
   667  0778  3001               	movlw	1
   668  0779  00FA               	movwf	??___lwdiv
   669  077A  087A               	movf	??___lwdiv,w
   670  077B  07FD               	addwf	___lwdiv@counter,f
   671  077C                     l740:
   672  077C  1FF7               	btfss	___lwdiv@divisor+1,7
   673  077D  2F7F               	goto	u191
   674  077E  2F80               	goto	u190
   675  077F                     u191:
   676  077F  2F71               	goto	l736
   677  0780                     u190:
   678  0780                     l742:
   679  0780  3001               	movlw	1
   680  0781                     u205:
   681  0781  1003               	clrc
   682  0782  0DFB               	rlf	___lwdiv@quotient,f
   683  0783  0DFC               	rlf	___lwdiv@quotient+1,f
   684  0784  3EFF               	addlw	-1
   685  0785  1D03               	skipz
   686  0786  2F81               	goto	u205
   687  0787  0877               	movf	___lwdiv@divisor+1,w
   688  0788  0279               	subwf	___lwdiv@dividend+1,w
   689  0789  1D03               	skipz
   690  078A  2F8D               	goto	u215
   691  078B  0876               	movf	___lwdiv@divisor,w
   692  078C  0278               	subwf	___lwdiv@dividend,w
   693  078D                     u215:
   694  078D  1C03               	skipc
   695  078E  2F90               	goto	u211
   696  078F  2F91               	goto	u210
   697  0790                     u211:
   698  0790  2F98               	goto	l748
   699  0791                     u210:
   700  0791                     l744:
   701  0791  0876               	movf	___lwdiv@divisor,w
   702  0792  02F8               	subwf	___lwdiv@dividend,f
   703  0793  0877               	movf	___lwdiv@divisor+1,w
   704  0794  1C03               	skipc
   705  0795  03F9               	decf	___lwdiv@dividend+1,f
   706  0796  02F9               	subwf	___lwdiv@dividend+1,f
   707  0797                     l746:
   708  0797  147B               	bsf	___lwdiv@quotient,0
   709  0798                     l748:
   710  0798  3001               	movlw	1
   711  0799                     u225:
   712  0799  1003               	clrc
   713  079A  0CF7               	rrf	___lwdiv@divisor+1,f
   714  079B  0CF6               	rrf	___lwdiv@divisor,f
   715  079C  3EFF               	addlw	-1
   716  079D  1D03               	skipz
   717  079E  2F99               	goto	u225
   718  079F                     l750:
   719  079F  3001               	movlw	1
   720  07A0  02FD               	subwf	___lwdiv@counter,f
   721  07A1  1D03               	btfss	3,2
   722  07A2  2FA4               	goto	u231
   723  07A3  2FA5               	goto	u230
   724  07A4                     u231:
   725  07A4  2F80               	goto	l742
   726  07A5                     u230:
   727  07A5                     l752:
   728  07A5  087C               	movf	___lwdiv@quotient+1,w
   729  07A6  00F7               	movwf	?___lwdiv+1
   730  07A7  087B               	movf	___lwdiv@quotient,w
   731  07A8  00F6               	movwf	?___lwdiv
   732  07A9                     l398:
   733  07A9  0008               	return
   734  07AA                     __end_of___lwdiv:
   735  007E                     btemp	set	126	;btemp
   736  007E                     wtemp0	set	126
   737                           
   738                           	psect	idloc
   739                           
   740                           ;Config register IDLOC0 @ 0x2000
   741                           ;	unspecified, using default values
   742  2000                     	org	8192
   743  2000  3FFF               	dw	16383
   744                           
   745                           ;Config register IDLOC1 @ 0x2001
   746                           ;	unspecified, using default values
   747  2001                     	org	8193
   748  2001  3FFF               	dw	16383
   749                           
   750                           ;Config register IDLOC2 @ 0x2002
   751                           ;	unspecified, using default values
   752  2002                     	org	8194
   753  2002  3FFF               	dw	16383
   754                           
   755                           ;Config register IDLOC3 @ 0x2003
   756                           ;	unspecified, using default values
   757  2003                     	org	8195
   758  2003  3FFF               	dw	16383
   759                           
   760                           	psect	config
   761                           
   762                           ;Config register CONFIG1 @ 0x2007
   763                           ;	Oscillator Selection bits
   764                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   765                           ;	Watchdog Timer Enable bit
   766                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   767                           ;	Power-up Timer Enable bit
   768                           ;	PWRTE = OFF, PWRT disabled
   769                           ;	RE3/MCLR pin function select bit
   770                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   771                           ;	Code Protection bit
   772                           ;	CP = OFF, Program memory code protection is disabled
   773                           ;	Data Code Protection bit
   774                           ;	CPD = OFF, Data memory code protection is disabled
   775                           ;	Brown Out Reset Selection bits
   776                           ;	BOREN = OFF, BOR disabled
   777                           ;	Internal External Switchover bit
   778                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   779                           ;	Fail-Safe Clock Monitor Enabled bit
   780                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   781                           ;	Low Voltage Programming Enable bit
   782                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   783                           ;	In-Circuit Debugger Mode bit
   784                           ;	DEBUG = 0x1, unprogrammed default
   785  2007                     	org	8199
   786  2007  20D4               	dw	8404
   787                           
   788                           ;Config register CONFIG2 @ 0x2008
   789                           ;	Brown-out Reset Selection bit
   790                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   791                           ;	Flash Program Memory Self Write Enable bits
   792                           ;	WRT = OFF, Write protection off
   793  2008                     	org	8200
   794  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      5       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     604
                                              0 BANK0      5     5      0
                            ___lwdiv
                             ___wmul
                            _initPWM
 ---------------------------------------------------------------------------------
 (1) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     314
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _initPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Apr 10 12:49:33 2023

                     l35 07BC                       l29 0740      ___wmul@multiplicand 0072  
                    l126 074D                      l128 0765                      l710 0739  
                    l720 0747                      l712 073D                      l704 072E  
                    l730 0766                      l722 0754                      l714 073F  
                    l706 0731                      l740 077C                      l732 0768  
                    l724 075B                      l716 0741                      l708 0737  
                    l398 07A9                      l750 079F                      l742 0780  
                    l734 076E                      l726 0761                      l718 0743  
                    l744 0791                      l736 0771                      l752 07A5  
                    l760 07B1                      l746 0797                      l738 0778  
                    l770 07C8                      l762 07B6                      l748 0798  
                    l772 07E8                      l764 07BA                      l756 07AA  
                    l774 07EA                      l766 07BB                      l758 07AF  
                    l768 07C0                      u210 0791                      u130 0747  
                    u211 0790                      u131 0746                      u205 0781  
                    u230 07A5                      u231 07A4                      u215 078D  
                    u160 0761                      u240 07C0                      u225 0799  
                    u161 0760                      u145 074E                      u241 07BF  
                    u170 076E                      u171 076D                      u155 0755  
                    u190 0780                      _PR2 0092                      u191 077F  
                    u185 0772                      u257 07F0                     _main 07AA  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___lwdiv 07AA                    _TRISA 0085          __end_of_initPWM 0741  
                  status 0003                    wtemp0 007E            main@adc_value 0022  
        __initialization 07F8             __end_of_main 07F8                   ??_main 0020  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
                 ___wmul 0741                ??___lwdiv 007A                ??_initPWM 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pbssBANK0 0025  
             __pmaintext 07AA                  ?___wmul 0070           main@duty_cycle 0024  
                ___lwdiv 0766                  __ptext1 072E                  __ptext2 0741  
                __ptext3 0766                  _initPWM 072E                _T2CONbits 0012  
             _duty_cycle 0025     end_of_initialization 07FC                _TRISCbits 0087  
            _CCP1CONbits 0017           __end_of___wmul 0766      start_initialization 07F8  
               ??___wmul 0074                ___latbits 0002            __pcstackBANK0 0020  
              _adc_value 0026         ___lwdiv@dividend 0078                 ?___lwdiv 0076  
               ?_initPWM 0070         ___lwdiv@quotient 007B           ___wmul@product 0074  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0070  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
